version: "3.4"

x-common: &common
  stdin_open: true
  tty: true
  restart: unless-stopped
  networks:
    - cx_analysis

x-django-build: &django-build
  build:
    context: .
    dockerfile: ./Dockerfile.stage

services:
  celery:
    <<: *django-build
    container_name: cx_analysis-cc01
    restart: unless-stopped
    command: bash -c "celery -A cx_analysis worker -l info"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/stage/.django
    volumes:
      - .:/code/
    <<: *common

  celery-beat:
    <<: *django-build
    container_name: cx_analysis-cb01
    restart: unless-stopped
    command: bash -c "celery -A cx_analysis worker -l info --beat --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/stage/.django
    volumes:
      - .:/code/
    <<: *common

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  django:
    <<: *django-build
    container_name: cx_analysis-dc01
    restart: unless-stopped
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
    ports:
      - "8000:8000"
    env_file:
      - ./config/env/stage/.django
    volumes:
      - ./:/code
      - cx_analysis_static_volume:/code/static
      - cx_analysis_media_volume:/code/media
    depends_on:
      - postgres
      - redis
    <<: *common

  flower:
    <<: *django-build
    container_name: cx_analysis-fc01
    command: bash -c "celery -A cx_analysis --broker=redis://${REDIS_URL}/0 flower --url_prefix=flower --basic_auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD}"
    ports:
      - "5555:5555"
    depends_on:
      - celery
    env_file:
      - ./config/env/stage/.django
    volumes:
      - .:/code/
    <<: *common


  nginx:
    build:
      context: .
      dockerfile: ./config/nginx/Dockerfile
    container_name: cx_analysis-nc01
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/stage/default.conf:/etc/nginx/conf.d/default.conf
      - cx_analysis_static_volume:/code/static
      - cx_analysis_media_volume:/code/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - django
      - flower
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    <<: *common

  postgres:
    image: postgres:13.3-buster
    container_name: cx_analysis-pc01
    restart: unless-stopped
    env_file:
      - ./config/env/stage/.postgres
    ports:
      - "5432:5432"
    volumes:
      - cx_analysis_postgres_data:/var/lib/postgresql/data/
    <<: *common

  redis:
    image: redis:6.2-buster
    container_name: cx_analysis-rc01
    restart: unless-stopped
    volumes:
      - cx_analysis_redis_data:/data
    <<: *common

networks:
  cx_analysis:
    driver: bridge

volumes:
  cx_analysis_postgres_data:
  cx_analysis_redis_data:
  cx_analysis_static_volume:
  cx_analysis_media_volume:
