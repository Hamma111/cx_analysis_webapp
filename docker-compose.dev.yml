version: "3.4"

x-common: &common
  stdin_open: true
  tty: true
  restart: unless-stopped
  networks:
    - project_name

x-django-build: &django-build
  build:
    context: .
    dockerfile: ./Dockerfile.dev

services:
  celery:
    <<: *django-build
    container_name: project_name-cc01
    command: bash -c "celery -A project_name worker -l info"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/dev/.env
    volumes:
      - .:/code/
    <<: *common

  celery-beat:
    <<: *django-build
    container_name: project_name-cb01
    command: bash -c "celery -A project_name worker -l info --beat --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/dev/.env
    volumes:
      - .:/code/
    <<: *common

  django:
    <<: *django-build
    container_name: project_name-dc01
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - ./config/env/dev/.env
    volumes:
      - ./:/code
      - project_name_static_volume:/code/static
      - project_name_media_volume:/code/media
    depends_on:
      - postgres
      - redis
    <<: *common

  flower:
    image: mher/flower:0.9.7
    container_name: project_name-fc01
    command:
      [
        "flower",
        "--broker=redis://redis:6379/0",
        "--broker_api=redis://redis:6379/0",
        "--port=5555",
      ]
    ports:
      - "5555:5555"
    <<: *common

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    container_name: project_name-fe01
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    ports:
      - "3000:3000"
    env_file:
      - ./config/env/dev/.frontend
    <<: *common

  postgres:
    image: postgres:13.3-alpine
    container_name: project_name-pc01
    env_file:
      - ./config/env/dev/.env
    ports:
      - "5432:5432"
    volumes:
      - project_name_postgres_data:/var/lib/postgresql/data/
    <<: *common

  redis:
    image: redis:6.2-alpine
    container_name: project_name-rc01
    volumes:
      - project_name_redis_data:/data
    <<: *common

networks:
  project_name:
    driver: bridge

volumes:
  project_name_postgres_data:
  project_name_redis_data:
  project_name_static_volume:
  project_name_media_volume:
